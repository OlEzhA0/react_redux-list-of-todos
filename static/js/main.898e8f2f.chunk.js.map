{"version":3,"sources":["store/index.ts","components/LoadSpinner/LoadSpinner.tsx","helpers/getData.ts","helpers/config.ts","components/TodosList.tsx","components/DowloadButton.tsx","App.tsx","index.tsx"],"names":["loadProcess","status","type","reverseTodos","isLoading","state","loading","getTodos","todos","getLoaded","loaded","getSortType","sortType","getReverseStatus","isReverse","initialState","store","createStore","action","filter","todo","id","LoadSpinner","className","API_URL","getData","a","Promise","fetch","all","users","json","preparedTodos","preparedUsers","preparedData","map","user","find","userId","controlPanelConfig","name","ListTodos","dispatch","useDispatch","useSelector","sortedTodos","useMemo","sort","b","String","username","localeCompare","title","completed","reversedTodos","reverse","config","key","href","onClick","setSortType","cn","DowloadButton","loadData","App","then","data","finally","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.898e8f2f.chunk.js","sourcesContent":["import { createStore, AnyAction } from 'redux';\n\nconst LOAD_PROCESS = 'LOAD_PROCESS';\nconst SET_TODOS = 'SET_TODOS';\nconst SET_LOADED = 'SET_LOADED';\nconst DELETE_TODO = 'DELETE_TODO';\nconst SORT_TYPE = 'SORT_TYPE';\nconst REVERSE = 'REVERSE';\n\nexport const loadProcess = (status: boolean) => ({ type: LOAD_PROCESS, status });\nexport const setTodos = (todos: Todo[]) => ({ type: SET_TODOS, todos });\nexport const setLoaded = () => ({ type: SET_LOADED });\nexport const deleteTodo = (id: number) => ({ type: DELETE_TODO, id });\nexport const setSortType = (sortType: string) => ({ type: SORT_TYPE, sortType });\nexport const reverseTodos = (status: boolean) => ({ type: REVERSE, status });\n\n\nexport const isLoading = (state: RootState) => state.loading;\nexport const getTodos = (state: RootState) => state.todos;\nexport const getLoaded = (state: RootState) => state.loaded;\nexport const getSortType = (state: RootState) => state.sortType;\nexport const getReverseStatus = (state: RootState) => state.isReverse;\n\nconst initialState: RootState = {\n  loading: false,\n  loaded: false,\n  sortType: 'id',\n  isReverse: false,\n  todos: [],\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case SET_TODOS:\n      return { ...state, todos: action.todos };\n\n    case LOAD_PROCESS:\n      return { ...state, loading: !state.loading };\n\n    case SET_LOADED:\n      return { ...state, loaded: true };\n\n    case DELETE_TODO:\n      return { ...state, todos: state.todos.filter(todo => todo.id !== action.id) };\n\n    case SORT_TYPE:\n      return { ...state, sortType: action.sortType }\n\n    case REVERSE:\n      return { ...state, isReverse: action.status }\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer, initialState\n);\n\nexport default store;\n","import React from 'react';\nimport './LoadSpinner.scss';\n\nexport const LoadSpinner = () => {\n  return (\n    <div className=\"Spinner__Wrap\">\n      <div className=\"lds-ellipsis\">\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n","const API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api/';\nconst USERS_PATH = '/users.json';\nconst TODOS_PATH = '/todos.json';\n\nexport const getData = async () => {\n  const [todos, users] = await Promise.all([\n    await fetch(`${API_URL}${TODOS_PATH}`),\n    await fetch(`${API_URL}${USERS_PATH}`),\n  ]);\n\n  const preparedTodos: Todo[] = await todos.json();\n  const preparedUsers: User[] = await users.json();\n\n  const preparedData = preparedTodos.map(todo => ({\n    ...todo,\n    user: preparedUsers.find(user => todo.userId === user.id) || '',\n  }));\n\n  return preparedData;\n};\n","export const controlPanelConfig = [\n  {\n    name: 'ID',\n    sortType: 'id',\n  },\n  {\n    name: 'Sort by name',\n    sortType: 'username',\n  },\n  {\n    name: 'Sort by title',\n    sortType: 'title',\n  },\n  {\n    name: 'Sort by status',\n    sortType: 'completed',\n  },\n  {\n    name: 'del',\n    sortType: '',\n  },\n];\n","import React, { useMemo } from 'react';\nimport cn from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getTodos, deleteTodo, getSortType, setSortType, reverseTodos, getReverseStatus,\n} from '../store';\nimport { controlPanelConfig } from '../helpers/config';\n\nexport const ListTodos: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos: Todo[] = useSelector(getTodos);\n  const sortType = useSelector(getSortType);\n  const isReverse = useSelector(getReverseStatus);\n\n  const changeSortType = (type: string) => {\n    if (!type) {\n      return;\n    }\n\n    if (type === sortType) {\n      dispatch(reverseTodos(!isReverse));\n    } else {\n      dispatch(setSortType(type));\n      dispatch(reverseTodos(false));\n    }\n  };\n\n  const sortedTodos = useMemo(\n    () => [...todos].sort((a: Todo, b: Todo): number => {\n      switch (sortType) {\n        case 'id':\n          return (a.id - b.id);\n\n        case 'username':\n          return (String(a.user.username).localeCompare(String(b.user.username)));\n\n        case 'title':\n          return (a.title.localeCompare(b.title));\n\n        case 'completed':\n          return (+a.completed - +b.completed);\n\n        default:\n          return 0;\n      }\n    }),\n    [sortType, todos, isReverse],\n  );\n\n  const reversedTodos = isReverse ? sortedTodos.reverse() : sortedTodos;\n\n  return (\n    <>\n      <ul className=\"list\">\n        {controlPanelConfig.map(config => (\n          <li className=\"item\" key={config.name}>\n            <a\n              href=\"#\"\n              className=\"link\"\n              onClick={() => changeSortType(config.sortType)}\n            >\n              {config.name}\n            </a>\n          </li>\n        ))}\n      </ul>\n      {reversedTodos.map(todo => (\n        <div\n          key={todo.id}\n          className={cn({\n            'todo completed': todo.completed,\n            todo: !todo.completed,\n          })}\n        >\n          <div className=\"id-todo\">\n            <p className=\"id__text\">\n              {todo.id}\n            </p>\n          </div>\n          <div className=\"name\">\n            <p className=\"name__text\">\n              {todo.user?.username}\n            </p>\n          </div>\n          <div className=\"title\">\n            <p className=\"title__text\">\n              {todo.title}\n            </p>\n          </div>\n          <div className=\"status\">\n            <p className=\"status__text\">\n              {todo.completed ? 'Completed' : 'Active'}\n            </p>\n          </div>\n          <button\n            type=\"button\"\n            onClick={() => dispatch(deleteTodo(todo.id))}\n            className=\"delete\"\n          >\n            Delete\n          </button>\n        </div>\n      ))}\n    </>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  loadData: () => void;\n}\n\nexport const DowloadButton: React.FC<Props> = ({ loadData }) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"get-info\"\n      onClick={loadData}\n    >\n      Loading\n    </button>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LoadSpinner } from './components/LoadSpinner';\nimport {\n  setTodos, isLoading, getLoaded, setLoaded, loadProcess,\n} from './store';\nimport { getData } from './helpers/getData';\nimport { ListTodos } from './components/TodosList';\nimport { DowloadButton } from './components/DowloadButton';\n\nconst App = () => {\n  const loading = useSelector(isLoading);\n  const loaded = useSelector(getLoaded);\n  const dispatch = useDispatch();\n\n  const loadData = () => {\n    dispatch(loadProcess(true));\n\n    getData()\n      .then(data => {\n        dispatch(setTodos(data as Todo[]));\n        dispatch(setLoaded());\n      })\n      .finally(() => dispatch(loadProcess(true)));\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1 className=\"App__title\">Redux list of todos</h1>\n        {!loaded && <DowloadButton loadData={loadData} />}\n        {loading && <LoadSpinner />}\n        {loaded && <ListTodos />}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}